// const mountReactHook = hook => {
//     const Component = ({ children }) => children(hook());
//     const componentHook = {};
//     let componentMount;
  
//     act(() => {
//       componentMount = render(
//         <Component>
//           {hookValues => {
//             Object.assign(componentHook, hookValues);
//             return null;
//           }}
//         </Component>
//       );
//     });
//     return { componentMount, componentHook };
// };

// describe("useLoginForm Hook", () => {
//     let setupComponent;
//     let hook;
  
  
//     it("sets loading to true before getting a new panda image", async () => {
        
//         await waitFor(() => {
//             setupComponent = mountReactHook(useLoginForm); // Mount a Component with our hook
//             hook = setupComponent.componentHook;
//         })
        
//         await waitFor(async () => {
//             console.log(hook.formik)
//             let res = await hook.formik.handleSubmit('asdasd')
//             console.log('res', res)
//         })
//     });
  
// });


    it('should submit the form', async () => {
        const handleSubmit = jest.fn()
        render(<LoginForm formik={handleSubmit} />)
      
        userEvent.type(screen.getByLabelText(/email/i), MOCK_USER_1.email)
        userEvent.type(screen.getByLabelText(/password/i), MOCK_USER_1.password)
      
        
        await waitFor(() => {
            userEvent.click(screen.getByTestId('submitLoginForm'))
        })
        await waitFor(() => {
            expect(handleSubmit).toHaveBeenCalled()
        })
        
    });